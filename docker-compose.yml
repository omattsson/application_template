services:
  db:
    image: mysql:8.0
    container_name: app-mysql-${GO_ENV:-prod}
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE:-app}
      - MYSQL_USER=${MYSQL_USER:-appuser}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-apppass}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpass}
      - TZ=UTC
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
      - ./backend/config/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - backend-net
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u $$MYSQL_USER --password=$$MYSQL_PASSWORD || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE to allow MySQL to adjust its process priority

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: ${GO_ENV:-production}
    container_name: app-backend-${GO_ENV:-prod}
    ports:
      - "${PORT:-8081}:8081"
    environment:
      - APP_NAME=${APP_NAME:-application}
      - APP_ENV=${GO_ENV:-production}
      - APP_DEBUG=${APP_DEBUG:-false}
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=${MYSQL_DATABASE:-app}
      - DB_USER=${MYSQL_USER:-appuser}
      - DB_PASSWORD=${MYSQL_PASSWORD:-apppass}
      - DB_MAX_OPEN_CONNS=${DB_MAX_OPEN_CONNS:-25}
      - DB_MAX_IDLE_CONNS=${DB_MAX_IDLE_CONNS:-25}
      - DB_CONN_MAX_LIFETIME=${DB_CONN_MAX_LIFETIME:-5m}
      - SERVER_HOST=0.0.0.0
      - PORT=${PORT:-8081}
      - SERVER_READ_TIMEOUT=${SERVER_READ_TIMEOUT:-15s}
      - SERVER_WRITE_TIMEOUT=${SERVER_WRITE_TIMEOUT:-15s}
      - SERVER_SHUTDOWN_TIMEOUT=${SERVER_SHUTDOWN_TIMEOUT:-30s}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FILE=${LOG_FILE:-}
      - API_VERSION=${API_VERSION:-v1}
      - API_PREFIX=${API_PREFIX:-/api}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
      - CORS_ALLOWED_METHODS=${CORS_ALLOWED_METHODS:-GET,POST,PUT,DELETE,OPTIONS}
      - CORS_ALLOWED_HEADERS=${CORS_ALLOWED_HEADERS:-Origin,Content-Type,Accept,Authorization}
      - CORS_MAX_AGE=${CORS_MAX_AGE:-300}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend-net
      - frontend-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./backend:/app
      - backend_go_mod:/go/pkg/mod

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: ${NODE_ENV:-production}
      args:
        - NODE_ENV=${NODE_ENV:-production}
    container_name: app-frontend-${NODE_ENV:-prod}
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - VITE_API_URL=http://backend:8081
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - frontend-net
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    command: npm run dev -- --host 0.0.0.0

volumes:
  mysql_data:
    driver: local  # Explicitly set local driver
  mysql_logs:
    driver: local  # For MySQL logs
  backend_go_mod:
  frontend_node_modules:

networks:
  backend-net:
    name: backend-network-${NODE_ENV:-prod}
  frontend-net:
    name: frontend-network-${NODE_ENV:-prod}
